<Window x:Class="AMDownloader.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:AMDownloader.Converters"
        xmlns:properties="clr-namespace:AMDownloader.Properties"
        xmlns:viewmodels="clr-namespace:AMDownloader.ViewModels"
        mc:Ignorable="d"
        Title="AM Downloader"
        x:Name="MainViewWindow"
        Initialized="Window_Initialized"
        Loaded="Window_Loaded"
        Closing="Window_Closing"
        Width="{Binding MainWindowWidth, Mode=TwoWay, Source={x:Static properties:Settings.Default}}"
        Height="{Binding MainWindowHeight, Mode=TwoWay, Source={x:Static properties:Settings.Default}}"
        Left="{Binding MainWindowLeft, Mode=TwoWay, Source={x:Static properties:Settings.Default}}"
        Top="{Binding MainWindowTop, Mode=TwoWay, Source={x:Static properties:Settings.Default}}"
        WindowState="{Binding MainWindowState, Mode=TwoWay, Source={x:Static properties:Settings.Default}}"
        Icon="pack://application:,,,/Resources/Icons/AMDownloader.ico"
        d:DataContext="{d:DesignInstance viewmodels:MainViewModel, IsDesignTimeCreatable=False}">
    <Window.Resources>
        <converters:ProgressBarVisibilityConverter x:Key="ProgressBarVisibilityConverter" />
        <converters:DownloaderSizeConverter x:Key="DownloaderSizeConverter" />
        <converters:DownloaderSpeedConverter x:Key="DownloaderSpeedConverter" />
        <converters:ProgramStatusConverter x:Key="ProgramStatusConverter" />
        <converters:StatusBarItemVisibilityConverter x:Key="StatusBarItemVisibilityConverter" />
        <converters:DownloaderStatusConverter x:Key="DownloaderStatusConverter" />
        <converters:DownloaderDateConverter x:Key="DownloaderDateConverter" />
        <converters:DownloaderDestinationFolderNameConverter x:Key="DownloaderDestinationConverter" />
        <converters:DownloaderDestinationPathConverter x:Key="DownloaderDestinationPathConverter" />
        <converters:DownloaderTypeConverter x:Key="DownloaderTypeConverter" />
        <converters:DownloaderFileIconConverter x:Key="DownloaderIconConverter" />
        <converters:DownloaderFolderIconConverter x:Key="DownloaderFolderIconConverter" />
        <converters:DownloaderEtaConverter x:Key="DownloaderEtaConverter" />
        <converters:TaskBarProgressConverter x:Key="TaskBarProgressConverter" />
        <converters:TaskBarProgressStateConverter x:Key="TaskBarProgressStateConverter" />
        <converters:TreeViewCountConverter x:Key="TreeViewCountConverter" />

        <Style x:Key="HeaderRowStyle"
               TargetType="{x:Type RowDefinition}">
            <Setter Property="Height"
                    Value="24" />
        </Style>

        <Style x:Key="HeaderTextBlockStyle"
               TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment"
                    Value="Center" />

            <Setter Property="TextTrimming"
                    Value="CharacterEllipsis" />

            <Setter Property="Margin"
                    Value="4 0 4 0" />
        </Style>

        <DataTemplate x:Key="HeaderTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Style="{StaticResource HeaderRowStyle}" />
                </Grid.RowDefinitions>

                <TextBlock Style="{StaticResource HeaderTextBlockStyle}"
                           Text="{Binding}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="HeaderTemplateArrowDown">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Style="{StaticResource HeaderRowStyle}" />
                </Grid.RowDefinitions>

                <Path StrokeThickness="1"
                      Fill="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Data="M 0 0 L 4 4 L 8 0 Z"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Center"
                      Margin="4 0 0 0" />

                <TextBlock Grid.Column="1"
                           Style="{StaticResource HeaderTextBlockStyle}"
                           Text="{Binding}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="HeaderTemplateArrowUp">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Style="{StaticResource HeaderRowStyle}" />
                </Grid.RowDefinitions>

                <Path StrokeThickness="1"
                      Fill="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                      Data="M 0 4 L 4 0 L 8 4 Z"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Center"
                      Margin="4 0 0 0" />

                <TextBlock Grid.Column="1"
                           Style="{StaticResource HeaderTextBlockStyle}"
                           Text="{Binding}" />
            </Grid>
        </DataTemplate>

        <CollectionViewSource x:Key="CategoriesList"
                              Source="{Binding CategoriesList}" />
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding UIClosedCommand, Mode=OneTime}"
                                   CommandParameter="{Binding ElementName=MainViewWindow}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.InputBindings>
        <KeyBinding Command="{Binding ClearCompletedDownloadsCommand}"
                    Key="Delete"
                    Modifiers="Alt" />
        <KeyBinding Command="{Binding RemoveCommand}"
                    CommandParameter="{Binding SelectedItems, ElementName=DownloadsListView}"
                    Key="Delete" />
        <KeyBinding Command="{Binding OpenCommand}"
                    CommandParameter="{Binding SelectedItems, ElementName=DownloadsListView}"
                    Key="O"
                    Modifiers="Ctrl" />
        <KeyBinding Command="{Binding OpenContainingFolderCommand}"
                    CommandParameter="{Binding SelectedItems, ElementName=DownloadsListView}"
                    Key="O"
                    Modifiers="Alt" />
        <KeyBinding Command="{Binding CopyLinkToClipboardCommand}"
                    CommandParameter="{Binding SelectedItems, ElementName=DownloadsListView}"
                    Key="C"
                    Modifiers="Ctrl" />
    </Window.InputBindings>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="{Binding Progress, Converter={StaticResource TaskBarProgressStateConverter}}"
                         ProgressValue="{Binding Progress, Converter={StaticResource TaskBarProgressConverter}}" />
    </Window.TaskbarItemInfo>
    <DockPanel>
        <!--#region Main menu -->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Command="{Binding ClearCompletedDownloadsCommand}"
                          Header="Clear Completed Downloads"
                          InputGestureText="Alt+Del">
                    <MenuItem.Icon>
                        <Viewbox>
                            <Frame Source="pack://application:,,,/Resources/Icons/Checklist_16x.xaml" />
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Settings"
                          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                          Command="{Binding SettingsCommand}">
                    <MenuItem.Icon>
                        <Viewbox>
                            <Frame Source="pack://application:,,,/Resources/Icons/Settings_16x.xaml" />
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem x:Name="ExitMenu"
                          Header="E_xit"
                          Click="ExitMenu_Click"
                          InputGestureText="Alt+F4">
                    <MenuItem.Icon>
                        <Viewbox>
                            <Frame Source="pack://application:,,,/Resources/Icons/ShutDown_16x.xaml" />
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem x:Name="CheckForUpdatesMenu"
                          Header="Check For _Updates"
                          Command="{Binding CheckForUpdatesCommand}"
                          CommandParameter="{StaticResource FalseValue}">
                    <MenuItem.Icon>
                        <Viewbox>
                            <Frame Source="pack://application:,,,/Resources/Icons/GetWebSite_16x.xaml" />
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem x:Name="AboutMenu"
                          Header="_About"
                          Click="AboutMenu_Click">
                </MenuItem>
            </MenuItem>
        </Menu>
        <!--#endregion-->

        <!--#region Toolbar -->
        <ToolBarTray DockPanel.Dock="Top"
                     IsLocked="True">
            <ToolBar>
                <ToolBar.Resources>
                    <Style TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                         Value="False">
                                <Setter Property="Opacity"
                                        Value="0.5" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToolBar.Resources>
                <Button Padding="4"
                        x:Name="AddButton"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        Command="{Binding AddCommand}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="16"
                                   Text="&#xF055;"
                                   FontFamily="{StaticResource FontAwesomeSolid}"
                                   Foreground="{StaticResource ResourceKey=AddButtonIconColor}" />
                        <TextBlock Margin="4 0 0 0"
                                   VerticalAlignment="Center"
                                   Text="Add" />
                    </StackPanel>
                </Button>
                <Button CommandParameter="{Binding SelectedItems, ElementName=DownloadsListView}"
                        Command="{Binding RemoveCommand}"
                        Padding="4"
                        x:Name="RemoveButton">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="16"
                                   Text="&#xF056;"
                                   FontFamily="{StaticResource FontAwesomeSolid}"
                                   Foreground="{StaticResource ResourceKey=RemoveButtonIconColor}" />
                        <TextBlock Margin="5 0 0 0"
                                   VerticalAlignment="Center"
                                   Text="Remove" />
                    </StackPanel>
                </Button>
                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                <Button Padding="4"
                        x:Name="StartButton"
                        CommandParameter="{Binding SelectedItems, ElementName=DownloadsListView}"
                        Command="{Binding StartCommand}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="16"
                                   Text="&#xF144;"
                                   FontFamily="{StaticResource FontAwesomeSolid}"
                                   Foreground="{StaticResource ResourceKey=StartButtonIconColor}" />
                        <TextBlock Margin="4 0 0 0"
                                   VerticalAlignment="Center"
                                   Text="Resume" />
                    </StackPanel>
                </Button>
                <Button Padding="4"
                        x:Name="PauseButton"
                        CommandParameter="{Binding SelectedItems, ElementName=DownloadsListView}"
                        Command="{Binding PauseCommand}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="16"
                                   Text="&#xF28B;"
                                   FontFamily="{StaticResource FontAwesomeSolid}"
                                   Foreground="{StaticResource ResourceKey=PauseButtonIconColor}" />
                        <TextBlock Margin="4 0 0 0"
                                   VerticalAlignment="Center"
                                   Text="Pause" />
                    </StackPanel>
                </Button>
                <Button Padding="4"
                        x:Name="CancelButton"
                        CommandParameter="{Binding SelectedItems, ElementName=DownloadsListView}"
                        Command="{Binding CancelCommand}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="16"
                                   Text="&#xF28D;"
                                   FontFamily="{StaticResource FontAwesomeSolid}"
                                   Foreground="{StaticResource ResourceKey=StopButtonIconColor}" />
                        <TextBlock Margin="4 0 0 0"
                                   VerticalAlignment="Center"
                                   Text="Cancel" />
                    </StackPanel>
                </Button>
                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                <Button Padding="4"
                        x:Name="StartQueueButton"
                        Command="{Binding StartQueueCommand}"
                        CommandParameter="{Binding SelectedItems, ElementName=DownloadsListView}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="16"
                                   Text="&#xF144;"
                                   FontFamily="{StaticResource FontAwesomeSolid}"
                                   Foreground="{StaticResource ResourceKey=StartQueueButtonIconColor}" />
                        <TextBlock Margin="4 0 0 0"
                                   VerticalAlignment="Center"
                                   Text="Start Queue" />
                    </StackPanel>
                </Button>
                <Button Padding="4"
                        x:Name="CancelQueueButton"
                        Command="{Binding StopQueueCommand}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="16"
                                   Text="&#xF28D;"
                                   FontFamily="{StaticResource FontAwesomeSolid}"
                                   Foreground="{StaticResource ResourceKey=StopQueueButtonIconColor}" />
                        <TextBlock Margin="4 0 0 0"
                                   VerticalAlignment="Center"
                                   Text="Stop Queue" />
                    </StackPanel>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <!--#endregion-->

        <!--#region Statusbar -->
        <DockPanel DockPanel.Dock="Bottom">
            <StatusBar Padding="4">
                <StatusBar.Resources>
                    <Style TargetType="{x:Type ProgressBar}">
                        <Setter Property="Height"
                                Value="16" />
                    </Style>

                    <Style TargetType="{x:Type Button}">
                        <Setter Property="HorizontalContentAlignment"
                                Value="Center" />

                        <Setter Property="VerticalContentAlignment"
                                Value="Center" />

                        <Setter Property="Width"
                                Value="16" />

                        <Setter Property="Height"
                                Value="16" />

                        <Style.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StatusBar.Resources>

                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>

                <!--#region Status -->
                <StatusBarItem>
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="{x:Type Ellipse}">
                                <Setter Property="Fill"
                                        Value="{StaticResource StausBarEllipseBusyColor}" />

                                <Setter Property="Width"
                                        Value="16" />

                                <Setter Property="Height"
                                        Value="16" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status}"
                                                 Value="Ready">
                                        <Setter Property="Fill"
                                                Value="{StaticResource StausBarEllipseReadyColor}" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Path=Visibility, ElementName=CancelBackgroundTaskButton}"
                                                 Value="Visible">
                                        <Setter Property="Visibility"
                                                Value="Collapsed" />
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>

                            <Style x:Key="CancelButtonStyle"
                                   TargetType="Button"
                                   BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Width"
                                        Value="16" />

                                <Setter Property="Height"
                                        Value="16" />

                                <Setter Property="BorderBrush"
                                        Value="{StaticResource StausBarEllipseBusyColor}" />

                                <Setter Property="Background"
                                        Value="{StaticResource StausBarEllipseBusyColor}" />

                                <Setter Property="Foreground"
                                        Value="{Binding Path=Background,RelativeSource={RelativeSource AncestorType=StatusBar}}" />

                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Ellipse Height="{TemplateBinding Height}"
                                                         Width="{TemplateBinding Width}"
                                                         Fill="{TemplateBinding Background}"
                                                         Stroke="{TemplateBinding BorderBrush}" />

                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>

                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver"
                                             Value="True">
                                        <Setter Property="Background"
                                                Value="{StaticResource StausBarCancelButtonHoverColor}" />

                                        <Setter Property="BorderBrush"
                                                Value="{StaticResource StausBarCancelButtonHoverColor}" />
                                    </Trigger>

                                    <Trigger Property="IsFocused"
                                             Value="True">
                                        <Setter Property="BorderBrush"
                                                Value="DarkGray" />

                                        <Setter Property="Background"
                                                Value="DarkGray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Button x:Name="CancelBackgroundTaskButton"
                                Content="&#xF00D;"
                                Command="{Binding CancelBackgroundTaskCommand}"
                                FontFamily="{StaticResource FontAwesomeSolid}"
                                Margin="0 0 4 0"
                                ToolTip="Cancel operation"
                                Cursor="Hand"
                                Style="{StaticResource CancelButtonStyle}" />

                        <Ellipse x:Name="BackgroundTaskEllipse"
                                 Grid.Column="1"
                                 Margin="0 0 4 0" />

                        <TextBlock x:Name="PriamryStatusTextBlock"
                                   TextTrimming="CharacterEllipsis"
                                   Grid.Column="2"
                                   Text="{Binding Status, Converter={StaticResource ProgramStatusConverter}}"
                                   d:Text="Status..."
                                   VerticalAlignment="Center" />
                    </Grid>
                </StatusBarItem>
                <!--#endregion-->

                <!--#region Speed Indicator -->
                <StatusBarItem Margin="16 0 0 0"
                               Grid.Column="1"
                               Visibility="{Binding Text, Converter={StaticResource StatusBarItemVisibilityConverter}, ElementName=SpeedTextBlock}"
                               HorizontalAlignment="Right">
                    <TextBlock>
                        <TextBlock Margin="0 0 4 0"
                                   Text="&#xF3FD;"
                                   FontFamily="{StaticResource FontAwesomeSolid}" />
                        
                        <TextBlock TextAlignment="Right"
                                   x:Name="SpeedTextBlock"
                                   Text="{Binding Speed, Converter={StaticResource DownloaderSpeedConverter}}"
                                   d:Text="Speed"
                                   ToolTip="Download speed" />
                    </TextBlock>
                </StatusBarItem>
                <!--#endregion-->

                <!--#region Bytes Transferred Indicator -->
                <StatusBarItem Margin="16 0 0 0"
                               Grid.Column="2"
                               Visibility="{Binding Text, Converter={StaticResource StatusBarItemVisibilityConverter}, ElementName=BytesDownloadedTextBlock}">
                    <TextBlock>
                        <TextBlock Margin="0 0 4 0"
                                   Text="&#xF019;"
                                   FontFamily="{StaticResource FontAwesomeSolid}" />
                        
                        <TextBlock x:Name="BytesDownloadedTextBlock"
                                   Text="{Binding BytesDownloadedThisSession, Converter={StaticResource DownloaderSizeConverter}}"
                                   d:Text="Downloaded"
                                   ToolTip="Downloaded this session" />
                    </TextBlock>
                </StatusBarItem>
                <!--#endregion-->

                <!--#region ProgressBar -->
                <StatusBarItem Grid.Column="3"
                               Margin="16 0 0 0"
                               Visibility="{Binding Progress, Converter={StaticResource ProgressBarVisibilityConverter}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock VerticalAlignment="Center"
                                   Text="{Binding Progress, StringFormat=\{0:0\}%}"
                                   d:Text="50%"
                                   Margin="0 0 4 0" />

                        <ProgressBar Grid.Column="1"
                                     x:Name="ProgressProgressBar"
                                     Value="{Binding Progress, Mode=OneWay}"
                                     d:Value="50"
                                     Width="100" />
                    </Grid>
                </StatusBarItem>
                <!--#endregion-->

            </StatusBar>
        </DockPanel>
        <!--#endregion-->

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding LeftPaneWidth, Mode=TwoWay, Source={x:Static properties:Settings.Default}}" />
                <ColumnDefinition Width="1.25" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!--#region Categories -->
            <ListBox x:Name="CategoriesList"
                     ItemsSource="{Binding CategoriesCollection}"
                     Loaded="CategoriesList_Loaded">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding CategoryChangedCommand}"
                                               CommandParameter="{Binding SelectedItem, ElementName=CategoriesList}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid x:Name="CatItemGrid"
                              HorizontalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="24" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>

                            <Ellipse Width="12"
                                     VerticalAlignment="Center"
                                     Height="12">
                                <Ellipse.Style>
                                    <Style TargetType="{x:Type Ellipse}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding}"
                                                         Value="All">
                                                <Setter Property="Fill"
                                                        Value="{StaticResource CategoryAllColor}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding}"
                                                         Value="Ready">
                                                <Setter Property="Fill"
                                                        Value="{StaticResource CategoryReadyColor}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding}"
                                                         Value="Downloading">
                                                <Setter Property="Fill"
                                                        Value="{StaticResource CategoryDownloadingColor}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding}"
                                                         Value="Queued">
                                                <Setter Property="Fill"
                                                        Value="{StaticResource CategoryQueuedColor}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding}"
                                                         Value="Paused">
                                                <Setter Property="Fill"
                                                        Value="{StaticResource CategoryPausedColor}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding}"
                                                         Value="Completed">
                                                <Setter Property="Fill"
                                                        Value="{StaticResource CategoryCompletedColor}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding}"
                                                         Value="Errored">
                                                <Setter Property="Fill"
                                                        Value="{StaticResource CategoryErroredColor}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding}"
                                                         Value="Verifying">
                                                <Setter Property="Fill"
                                                        Value="{StaticResource CategoryVerifyingColor}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>

                            <TextBlock Grid.Column="1"
                                       TextTrimming="CharacterEllipsis"
                                       VerticalAlignment="Center"
                                       Margin="4 0 4 0"
                                       Text="{Binding}" />

                            <TextBlock x:Name="CatCountTextBlock"
                                       Grid.Column="2"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding}"
                                                         Value="All">
                                                <Setter Property="Text"
                                                        Value="{Binding DataContext.Count, Converter={StaticResource TreeViewCountConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding}"
                                                         Value="Ready">
                                                <Setter Property="Text"
                                                        Value="{Binding DataContext.ReadyCount, Converter={StaticResource TreeViewCountConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding}"
                                                         Value="Queued">
                                                <Setter Property="Text"
                                                        Value="{Binding DataContext.QueuedCount, Converter={StaticResource TreeViewCountConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding}"
                                                         Value="Paused">
                                                <Setter Property="Text"
                                                        Value="{Binding DataContext.PausedCount, Converter={StaticResource TreeViewCountConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding}"
                                                         Value="Errored">
                                                <Setter Property="Text"
                                                        Value="{Binding DataContext.ErroredCount, Converter={StaticResource TreeViewCountConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding}"
                                                         Value="Downloading">
                                                <Setter Property="Text"
                                                        Value="{Binding DataContext.DownloadingCount, Converter={StaticResource TreeViewCountConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding}"
                                                         Value="Completed">
                                                <Setter Property="Text"
                                                        Value="{Binding DataContext.CompletedCount, Converter={StaticResource TreeViewCountConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding}"
                                                         Value="Verifying">
                                                <Setter Property="Text"
                                                        Value="{Binding DataContext.VerifyingCount, Converter={StaticResource TreeViewCountConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>

                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="HorizontalContentAlignment"
                                Value="Stretch" />
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.Style>
                    <Style TargetType="{x:Type ListBox}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBackgroundWorking}"
                                         Value="True">
                                <Setter Property="IsEnabled"
                                        Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Style>
            </ListBox>
            <!--#endregion-->

            <GridSplitter Grid.Column="1"
                          HorizontalAlignment="Stretch" />

            <!--#region Downloads -->
            <ListView ItemsSource="{Binding DownloadItemsView}"
                      x:Name="DownloadsListView"
                      Grid.Column="2"
                      ButtonBase.Click="DownloadsListView_HeaderClick"
                      SelectionMode="Extended"
                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.VirtualizationMode="Recycling">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding OpenCommand}"
                                               CommandParameter="{Binding Path=SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <ListView.Resources>
                    <Style x:Key="HeaderLeftAlignedStyle"
                           TargetType="{x:Type GridViewColumnHeader}">
                        <Setter Property="HorizontalContentAlignment"
                                Value="Left" />
                    </Style>

                    <Style x:Key="HeaderCenterAlignedStyle"
                           TargetType="{x:Type GridViewColumnHeader}">
                        <Setter Property="HorizontalContentAlignment"
                                Value="Center" />
                    </Style>

                    <Style x:Key="HeaderRightAlignedStyle"
                           TargetType="{x:Type GridViewColumnHeader}">
                        <Setter Property="HorizontalContentAlignment"
                                Value="Right" />
                    </Style>

                    <Style x:Key="DownloadsGridIconStyle"
                           TargetType="{x:Type Image}">
                        <Setter Property="Width"
                                Value="16" />
                        <Setter Property="Height"
                                Value="16" />
                    </Style>

                    <Style x:Key="DownloadsGridRowStyle"
                           TargetType="{x:Type RowDefinition}">
                        <Setter Property="Height"
                                Value="20" />
                    </Style>

                    <Style x:Key="DownloadsGridTextBlockStyle"
                           TargetType="{x:Type TextBlock}">
                        <Setter Property="VerticalAlignment"
                                Value="Center" />
                        <Setter Property="TextTrimming"
                                Value="CharacterEllipsis" />
                    </Style>

                    <Style TargetType="{x:Type ListView}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBackgroundWorking}"
                                         Value="True">
                                <Setter Property="IsEnabled"
                                        Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Resources>

                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Open"
                                  Command="{Binding OpenCommand}"
                                  CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                  InputGestureText="Ctrl+O">
                            <MenuItem.Icon>
                                <Viewbox>
                                    <Frame Source="pack://application:,,,/Resources/Icons/Open_16x.xaml" />
                                </Viewbox>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Open Containing Folder"
                                  Command="{Binding OpenContainingFolderCommand}"
                                  CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                  InputGestureText="Alt+O">
                            <MenuItem.Icon>
                                <Viewbox>
                                    <Frame Source="pack://application:,,,/Resources/Icons/OpenFolder_16x.xaml" />
                                </Viewbox>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Copy Link"
                                  Command="{Binding CopyLinkToClipboardCommand}"
                                  CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                  InputGestureText="Ctrl+C">
                            <MenuItem.Icon>
                                <Viewbox>
                                    <Frame Source="pack://application:,,,/Resources/Icons/CopyLongTextToClipboard_16x.xaml" />
                                </Viewbox>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Resume"
                                  Command="{Binding StartCommand}"
                                  CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}">
                            <MenuItem.Icon>
                                <Viewbox>
                                    <Frame Source="pack://application:,,,/Resources/Icons/Run_16x.xaml" />
                                </Viewbox>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Pause"
                                  Command="{Binding PauseCommand}"
                                  CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}">
                            <MenuItem.Icon>
                                <Viewbox>
                                    <Frame Source="pack://application:,,,/Resources/Icons/Pause_16x.xaml" />
                                </Viewbox>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Cancel"
                                  Command="{Binding CancelCommand}"
                                  CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}">
                            <MenuItem.Icon>
                                <Viewbox>
                                    <Frame Source="pack://application:,,,/Resources/Icons/Stop_16x.xaml" />
                                </Viewbox>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Enqueue"
                                  Command="{Binding EnqueueCommand}"
                                  CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}">
                            <MenuItem.Icon>
                                <Viewbox>
                                    <Frame Source="pack://application:,,,/Resources/Icons/AddRow_16x.xaml" />
                                </Viewbox>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Dequeue"
                                  Command="{Binding DequeueCommand}"
                                  CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}">
                            <MenuItem.Icon>
                                <Viewbox>
                                    <Frame Source="pack://application:,,,/Resources/Icons/RemoveRow_16x.xaml" />
                                </Viewbox>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Remove"
                                  Command="{Binding RemoveCommand}"
                                  CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                  InputGestureText="Del">
                            <MenuItem.Icon>
                                <Viewbox>
                                    <Frame Source="pack://application:,,,/Resources/Icons/Trash_16x.xaml" />
                                </Viewbox>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </ListView.ContextMenu>

                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="HorizontalContentAlignment"
                                Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>

                <ListView.View>
                    <GridView x:Name="DownloadsGridView">
                        <GridViewColumn HeaderTemplate="{StaticResource HeaderTemplate}"
                                        HeaderContainerStyle="{StaticResource HeaderLeftAlignedStyle}"
                                        Width="200"
                                        Header="Name">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <Grid.RowDefinitions>
                                            <RowDefinition Style="{StaticResource DownloadsGridRowStyle}" />
                                        </Grid.RowDefinitions>

                                        <Image Source="{Binding Converter={StaticResource DownloaderIconConverter}}"
                                               Style="{StaticResource DownloadsGridIconStyle}"
                                               Margin="0 0 4 0"
                                               VerticalAlignment="Center" />

                                        <TextBlock Grid.Column="1"
                                                   Text="{Binding Name}"
                                                   Style="{StaticResource DownloadsGridTextBlockStyle}" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn HeaderTemplate="{StaticResource HeaderTemplate}"
                                        HeaderContainerStyle="{StaticResource HeaderLeftAlignedStyle}"
                                        Header="Type"
                                        Width="100">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Style="{StaticResource DownloadsGridRowStyle}" />
                                        </Grid.RowDefinitions>

                                        <TextBlock Text="{Binding Destination, Converter={StaticResource DownloaderTypeConverter}}"
                                                   Style="{StaticResource DownloadsGridTextBlockStyle}" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn HeaderTemplate="{StaticResource HeaderTemplate}"
                                        HeaderContainerStyle="{StaticResource HeaderLeftAlignedStyle}"
                                        Header="Status"
                                        Width="84">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Style="{StaticResource DownloadsGridRowStyle}" />
                                        </Grid.RowDefinitions>

                                        <TextBlock Style="{StaticResource DownloadsGridTextBlockStyle}">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource DownloaderStatusConverter}">
                                                    <Binding Path="DataContext.QueueProcessor"
                                                             RelativeSource="{RelativeSource AncestorType=ListView}" />
                                                    <Binding />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>

                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn HeaderTemplate="{StaticResource HeaderTemplate}"
                                        HeaderContainerStyle="{StaticResource HeaderLeftAlignedStyle}"
                                        Header="Progress"
                                        Width="100">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Style="{StaticResource DownloadsGridRowStyle}" />
                                        </Grid.RowDefinitions>

                                        <ProgressBar x:Name="ProgressProgressBar"
                                                     VerticalAlignment="Stretch"
                                                     HorizontalAlignment="Stretch"
                                                     Minimum="0"
                                                     Maximum="100"
                                                     Value="{Binding Progress, Mode=OneWay}" />

                                        <TextBlock Text="{Binding Value, ElementName=ProgressProgressBar, StringFormat=\{0:0\}%}"
                                                   HorizontalAlignment="Center"
                                                   Style="{StaticResource DownloadsGridTextBlockStyle}" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn HeaderTemplate="{StaticResource HeaderTemplate}"
                                        HeaderContainerStyle="{StaticResource HeaderRightAlignedStyle}"
                                        Header="Downloaded"
                                        Width="100">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Style="{StaticResource DownloadsGridRowStyle}" />
                                        </Grid.RowDefinitions>

                                        <TextBlock Style="{StaticResource DownloadsGridTextBlockStyle}"
                                                   Text="{Binding BytesDownloaded, Converter={StaticResource DownloaderSizeConverter}}"
                                                   HorizontalAlignment="Right" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn HeaderTemplate="{StaticResource HeaderTemplate}"
                                        HeaderContainerStyle="{StaticResource HeaderRightAlignedStyle}"
                                        Header="Size"
                                        Width="76">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Style="{StaticResource DownloadsGridRowStyle}" />
                                        </Grid.RowDefinitions>

                                        <TextBlock TextAlignment="Right"
                                                   Style="{StaticResource DownloadsGridTextBlockStyle}"
                                                   Text="{Binding TotalBytesToDownload, Converter={StaticResource DownloaderSizeConverter}}" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn HeaderTemplate="{StaticResource HeaderTemplate}"
                                        HeaderContainerStyle="{StaticResource HeaderRightAlignedStyle}"
                                        Header="Speed"
                                        Width="76">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Style="{StaticResource DownloadsGridRowStyle}" />
                                        </Grid.RowDefinitions>

                                        <TextBlock Style="{StaticResource DownloadsGridTextBlockStyle}"
                                                   Text="{Binding Speed, Converter={StaticResource DownloaderSpeedConverter}}"
                                                   HorizontalAlignment="Right" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn HeaderTemplate="{StaticResource HeaderTemplate}"
                                        HeaderContainerStyle="{StaticResource HeaderRightAlignedStyle}"
                                        Header="Connections"
                                        Width="80">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Style="{StaticResource DownloadsGridRowStyle}" />
                                        </Grid.RowDefinitions>

                                        <TextBlock HorizontalAlignment="Right">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}"
                                                       BasedOn="{StaticResource DownloadsGridTextBlockStyle}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsDownloading}"
                                                                     Value="False">
                                                            <Setter Property="Visibility"
                                                                    Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>

                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0}/{1}">
                                                    <Binding Path="Connections" />
                                                    <Binding Path="ConnLimit" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn HeaderTemplate="{StaticResource HeaderTemplate}"
                                        HeaderContainerStyle="{StaticResource HeaderRightAlignedStyle}"
                                        Header="ETA"
                                        Width="76">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Style="{StaticResource DownloadsGridRowStyle}" />
                                        </Grid.RowDefinitions>

                                        <TextBlock TextAlignment="Right"
                                                   Style="{StaticResource DownloadsGridTextBlockStyle}"
                                                   Text="{Binding TimeRemaining, Converter={StaticResource DownloaderEtaConverter}}" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn HeaderTemplate="{StaticResource HeaderTemplate}"
                                        HeaderContainerStyle="{StaticResource HeaderLeftAlignedStyle}"
                                        Header="Location"
                                        Width="248">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <Grid.RowDefinitions>
                                            <RowDefinition Style="{StaticResource DownloadsGridRowStyle}" />
                                        </Grid.RowDefinitions>

                                        <Image Source="{Binding Destination, Converter={StaticResource DownloaderFolderIconConverter}}"
                                               Style="{StaticResource DownloadsGridIconStyle}"
                                               Margin="0 0 4 0"
                                               VerticalAlignment="Center" />

                                        <TextBlock Margin="0 0 4 0"
                                                   Grid.Column="1"
                                                   Style="{StaticResource DownloadsGridTextBlockStyle}"
                                                   Text="{Binding Destination, Converter={StaticResource DownloaderDestinationConverter}}" />

                                        <TextBlock Grid.Column="2"
                                                   Style="{StaticResource DownloadsGridTextBlockStyle}"
                                                   Text="{Binding Destination, Converter={StaticResource DownloaderDestinationPathConverter}}"
                                                   Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn HeaderTemplate="{StaticResource HeaderTemplate}"
                                        HeaderContainerStyle="{StaticResource HeaderLeftAlignedStyle}"
                                        Header="URL"
                                        Width="400">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Style="{StaticResource DownloadsGridRowStyle}" />
                                        </Grid.RowDefinitions>

                                        <TextBlock Style="{StaticResource DownloadsGridTextBlockStyle}"
                                                   Text="{Binding Url}" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn HeaderTemplate="{StaticResource HeaderTemplate}"
                                        HeaderContainerStyle="{StaticResource HeaderRightAlignedStyle}"
                                        Header="Added"
                                        Width="148">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Style="{StaticResource DownloadsGridRowStyle}" />
                                        </Grid.RowDefinitions>

                                        <TextBlock Style="{StaticResource DownloadsGridTextBlockStyle}"
                                                   Text="{Binding CreatedOn, Converter={StaticResource DownloaderDateConverter}}"
                                                   TextAlignment="Right" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn HeaderTemplate="{StaticResource HeaderTemplate}"
                                        HeaderContainerStyle="{StaticResource HeaderRightAlignedStyle}"
                                        Header="Completed"
                                        Width="148">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Style="{StaticResource DownloadsGridRowStyle}" />
                                        </Grid.RowDefinitions>

                                        <TextBlock Style="{StaticResource DownloadsGridTextBlockStyle}"
                                                   Text="{Binding CompletedOn, Converter={StaticResource DownloaderDateConverter}}"
                                                   TextAlignment="Right" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn HeaderTemplate="{StaticResource HeaderTemplate}"
                                        HeaderContainerStyle="{StaticResource HeaderLeftAlignedStyle}"
                                        Header="HTTP Status"
                                        Width="80">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Style="{StaticResource DownloadsGridRowStyle}" />
                                        </Grid.RowDefinitions>

                                        <TextBlock Style="{StaticResource DownloadsGridTextBlockStyle}"
                                                   Text="{Binding StatusCode}" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <!--#endregion-->
        </Grid>
    </DockPanel>
</Window>